import { readdirSync, readFileSync, writeFileSync } from "fs";
import path from "path";
import { fileURLToPath } from "url";

const filename = fileURLToPath(import.meta.url);
const dirname = path.dirname(filename);

const files = readdirSync(dirname)
  .filter((f) => f.endsWith(".svg"))
  .map((f) => f.split(".")[0]);

const css = files
  .flatMap((iconName) => {
    const base64 = readFileSync(path.join(dirname, `${iconName}.svg`), {
      encoding: "base64",
    });
    return [
      `.map-${iconName} {`,
      `  background-image: url(data:image/svg+xml;base64,${base64});`,
      "}",
      "",
    ];
  })
  .join("\n");

const ts = `/** Generated by lib/icons/encode.mjs */
export type MapIconType =
${files.map((f) => `  | "${f}"`).join("\n")};

/** Generated by lib/icons/encode.mjs */
export const MapIcons: MapIconType[] = [
${files.map((f) => `  "${f}",`).join("\n")}
];
`;

writeFileSync(path.join(dirname, "icons.css"), css.replaceAll("\n", "\r\n"));
writeFileSync(path.join(dirname, "icons.ts"), ts.replaceAll("\n", "\r\n"));
